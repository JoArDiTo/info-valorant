---
interface Props {
  id: string;
  uuid: string;
  displayName: string;
  displayIcon: string;
  bustPortrait: null | string;
  backgroundGradientColors: string[];
  roleName: string
}

const { id, uuid, displayName, displayIcon, bustPortrait, backgroundGradientColors, roleName } = Astro.props;

const borderColor = '#' + backgroundGradientColors[0];
const agentName = displayName.toUpperCase()
---

<a
  id={id}
  href=`agente/${uuid}`
  class="bg-gray-900 relative flex flex-col transition-all duration-300 easy-linear items-center py-6 rounded-xl shadow-xl border w-36 sm:w-48 lg:w-56"
  style={`border-color: ${borderColor};`}
> 
  <div class="mb-8">
    <img
    class="w-28 sm:w-36 lg:w-48 mb-1 sm:mb-2 lg:mb-3 rounded-lg" 
    src={displayIcon}
    alt=`Icono de ${displayName}`
    >
    <img
      class="translate-y-1/4 opacity-0 transition-all duration-300 absolute bottom-0 left-0 right-0 m-auto pointer-events-none" 
      src={bustPortrait}
      transition:name=`image-${uuid}`
      alt=`Imagen de ${displayName}`
    >
  </div>
  <span 
    class="text-lg sm:text-xl lg:text-2xl font-bold font-primary"
    style=`color: ${borderColor};`
  >
    {agentName}
  </span>
  <p class="font-secondary text-2xl text-gray-400">{roleName}</p>
</a>

<style>   
  a div img:last-child {
    opacity: 0
  }

  a:hover {
    transform:
      perspective(250px)
      rotateX(10deg)
      translateY(-5%)
      translateZ(0)
  }

  a:before {
    content: '';
    position: absolute;
    bottom: 0;
    height: 100%;
    width: 100%;
    background-image: linear-gradient(
      to bottom,
      transparent 10%,
      rgba(0, 0, 0, 0.5) 50%,
      rgba(0, 0, 0) 95%
    );
    border-radius: 12px;
    opacity: 0;
    transition: all .3s ease;
  }

  a:hover::before {
    opacity: 1;
  }

  a:hover div img:last-child {
    opacity: 1;
    transform: translateY(-32%);
  }
</style>
